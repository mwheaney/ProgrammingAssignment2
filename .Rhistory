?q
q()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
bye
bye()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/boring_function.R')
submit()
boring_function('My first function!')
boring_function
?length
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/my_mean.R')
submit()
my_mean(c(4,5,10))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/remainder.R')
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num =5)
remainder(4, div=2)
args(remainder)
?median
?floor
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
submit()
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
submit()
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
submit()
evaluate("sum", c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate("sum", c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate("sum", c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate("sum", c(1,3))
evaluate(sum, c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate(sum, c(1,3))
evaluate(median, c(1,3))
?median
submit()
swirl()
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate(median, c(1,3))
evaluate
library(evaluate)
evaluate(median, c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
args(evaluate)
evaluate2 <- function(func, dat){
func(dat)
}
evaluate2(median, c(1,3))
evaluate(sum, c(2, 4, 6))
rm(list=ls())
source(evaluate.R)
source("evaluate.R"")
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate(sum, c(2, 4, 6))
swirl()
submit()
evaluate2(median, c(1,3))
evaluate(median, c(1,3))
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/evaluate.R')
evaluate(median, c(1,3))
submit()
?sd
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){dat[[1]]}, (c8,4,0)
?first
evaluate(function(x){head}, (c8,4,0)
evaluate(function(x){head()}, (c8,4,0)
evaluate(function(x){head(x)}, (c8,4,0)
evaluate(function(x){x+1}, 6)
evaluate(function(x){head}, c(8,4,0)
evaluate(function(x){dat[[1]]}, c(8,4,0)
evaluate(function(x){head}, c(8,4,0))
evaluate(function(x){dat[[1]]}, c(8,4,0))
evaluate(function(x){x+1}, 6)
evaluate(function(x){head(x)}, c(8,4,0))
evaluate(function(x){head(x), n=1}, c(8,4,0))
info()
evaluate(function(x){x+1}, 6)
?head
evaluate(function(x){head(x, n=1), c(8,4,0))
head(x8,4,0)
head(c(8,4,0))
head(c(8,4,0), n=1)
evaluate(function(x){head((x), n=1)), c(8,4,0))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x=8}, c(8,4,0))
evaluate(function(x){x[[1]]}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[[3]]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
?last
evaluate(function(x){tail(x)}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/telegram.R')
telegram("Good", "morning")
submit()
telegram("Good", "morning")
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/mad_libs.R')
mad_libs(place="New York", adjective="drunk")
mad_libs(place="New York", adjective="drunk", noun="bar")
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/mad_libs.R')
mad_libs(place="New York", adjective="drunk", noun="bar")
submit()
mad_libs(place="New York", adjective="drunk", noun="bar")
source('C:/Users/Mark/AppData/Local/Temp/RtmpcxHZpI/bin_op.R')
"Good" %p% "job!"
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list -< lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vector <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shames <- flags[, 19:23]
flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
(flags, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population, flags$landmass, mean)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
sample(c(0,1), 100, prob= c(0.3, 0.7))
sample(c(0,1),size=100, replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1),size=100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?pois()
?rpois()
rpois(5)
rpois(5, lambda=10)
replicate(100, rpois(5, lambda=10))
mp_pois <- replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- POSIZlt(Sys.time())
t2 <- POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2#min
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <-  "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
sample (c(0,1) size=24000, replace=TRUE, prob=0.5)
sample (c(0,1), size=24000, replace=TRUE, prob=0.5)
?sample
sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)
sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5))
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))/12000
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))/12000
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))/12000
sum(sample (c(0,1), size=24000, replace=TRUE, prob=c(0.5,0.5)))/12000
(sample (c(1:30), size=3, replace=FALSE)
(sample (c(1:30), size=3, replace=FALSE))
(sample (c(1:30), size=3, replace=FALSE))
(sample (c(1:30), size=3, replace=FALSE))
c((sample (c(1:15), size=3, replace=FALSE)),(sample (c(15:30), size=2, replace=FALSE)))
c((sample (c(1:15), size=2, replace=FALSE)),(sample (c(15:30), size=2, replace=FALSE)))
c((sample (c(1:15), size=2, replace=FALSE)),(sample (c(15:30), size=2, replace=FALSE)))
c((sample (c(1:15), size=2, replace=FALSE)),(sample (c(15:30), size=2, replace=FALSE)))
c((sample (c(1:15), size=2, replace=FALSE)),(sample (c(15:30), size=2, replace=FALSE)))
testScores <- read.table(testscores.txt)
testScores <- read.table("testscores.txt")
dir()
cd("datasciencecoursera/")
setwd("datasciencecoursera/")
testScores <- read.table("testscore.txt")
testScores
?df
df(testScore[,1], size=3, replace=FALSE)
df(testScores[,1], size=3, replace=FALSE)
df((testScores[,1]), size=3, replace=FALSE)
sample(testScores[,1], size=3, replace=FALSE)
sample(testScores[,1], size=3, replace=FALSE)
testscores[,1]
testScores[,1]
sample(testScores[,1], size=3, replace=FALSE)
sample(testScores[,1], size=3, replace=FALSE)
?sapply
sapply(testScores, sample(testScores[,1], size=3, replace=FALSE))
sapply(testScores, (sample(size=3, replace=FALSE))
sapply(testScores, (sample(size=3, replace=FALSE)))
sSample <- function(x, size=3, replace=FALSE){sample(x)}
sSample(testScores[,1])
sSample <- function(x){sample(x, size=3, replace=FALSE)}
sSample(testScores[,1])
sapply(testScores, sSample)
unlist(sapply(testScores, sSample))
stratSample <- unlist(sapply(testScores, sSample))
sapply(stratSample, unlist())
?unlist
sapply(stratSample, unlist)
sapply(stratSample, unlist)
sapply(sapply(testScores, sSample)), unlist)
sample(1:6, number=2, replace=FALSE)
sample(1:6, size=2, replace=FALSE)
scols <- sample(1:6, size=2, replace=FALSE)
sapply(testScores[,scols], sSample)
clusterSample <- sapply(testScores[,scols], sSample)
clusterSample
sapply(clusterSample, unlist)
summary(sapply(clusterSample, unlist))
sample(testSCores, size=15, replace=FALSE)
sample(testScores, size=15, replace=FALSE)
testScores
testScoreList <- unlist(testscores)
testScoreList <- unlist(testScores)
sample(testScoreList, size=15, replace=FALSE)
sample(as.vector(testScoreList, size=15, replace=FALSE))
as.vector(sample(testScoreList, size=15, replace=FALSE))
sample(c(1:6), size=20, replace=TRUE)
hist(sample(c(1:6), size=20, replace=TRUE))
hist(sample(c(1:6), size=20, replace=TRUE))
hist(sample(c(1:6), size=20, replace=TRUE))
hist(sample(c(1:6), size=200, replace=TRUE))
hist(sample(c(1:6), size=200, replace=TRUE))
hist(sample(c(1:6), size=20, replace=TRUE))
hist(sample(c(1:6), size=200, replace=TRUE))
hist(sample(c(1:6), size=20, replace=TRUE))
hist(sample(c(1:6), size=200, replace=TRUE))
hist(sample(c(1:6), size=20000, replace=TRUE))
rm(list = ls)
?rm
rm(list = ls()
rm(list = ls())
p1values = as.numeric(c(2, 3, 4, 3, 5))
sum(p1values)
sum(p1values)^2
p1values*p1values
p1values^2
sum(p1values^2)
sum(p1values^2)/length(p1values)
length(p1values)
p1values^2-5
sum(p1values^2-5)
p1values^2-mean(p1values)
sum(p1values^2-mean(p1values))
p1values^2-mean(p1values)
p1values^2-mean(p1values)^2
(p1values^2-mean(p1values))^2
sum((p1values^2-mean(p1values))^2)
p1values-mean(p1values)
p1values
p1values^2
wum(p1values^2)
sum(p1values^2)
sum(p1values)/length(p1values)
p1values-(mean(p1values))
sum(p1values-(mean(p1values))
sum(p1values-(mean(p1values)))
(mean(p1values)
(mean(p1values))
sum(p1values)-(mean(p1values))
p1values-mean(p1values)
sum(p1values-mean(p1values))
p1values-mean(p1values)
sum(p1values-mean(p1values))
as.numeric(sum(p1values-mean(p1values)))
p1 <- p1deviations
p1values-mean(p1values)
p1deviations <- p1values-mean(p1values)
sum(p1deviations)
round(sum(p1values-mean(p1values)),10)
format(sum(p1values-mean(p1values)),scientific=FALSE)
p1deviations
mean(p1deviations)
?round
mean(trunc(p1deviations), digits =4)
sum(trunc(p1deviations), digits =4)
p1values-mean(p1values)
(p1values-mean(p1values))^2
sum((p1values-mean(p1values))^2)
sum((p1values-mean(p1values))^2)/length(p1values)
p1values <- (c(5, 6, 7, 6, 8 ))
sum(p1values)
sum(p1values)^2
p1values^2
sum(p1values^2)
sum(p1values^2)/length(p1values)
sum(p1values)/length(p1values)
p1values - sum(p1values)/length(p1values)
sum(p1values - sum(p1values)/length(p1values))
sum(trunc(p1values - sum(p1values)/length(p1values)), digits=4)
?average
mean(p1values)
sum(p1values - mean(p1values))
(p1values - mean(p1values)
p1values - mean(p1values)
trunc((p1values - mean(p1values), digits=4)
trunc((p1values - mean(p1values)), digits=4)
trunc((p1values - mean(p1values)), digits=10)
trunc(sum(p1values - mean(p1values)), digits=4))
sum(p1values - mean(p1values))
trunc(sum(p1values - mean(p1values)), digits=4
)
(p1values - mean(p1values)
p1values - mean(p1values)
(p1values - mean(p1values))^2
p3values <-c(8, 2, 5, 7, 6 )
sum(p3values)
sum(p3values)^2
sum(p3values^2)
(p3values^2)
sum(p3values)/length(p3values)
p3avg <- sum(p3values)/length(p3values)
p3values - p3avg
sum(p3values - p3avg)
sum(round(p3values - p3avg))
p3values - round(p3avg)
p3avg
p3values - round(p3avg, digits =2)
p3values - round(p3avg, digits =10)
p3values - round(p3avg, digits =20)
p3values - round(p3avg, digits =30)
sum(p3values - round(p3avg, digits =30))
sum(p3values - round(p3avg, digits =2))
sum(p3values - 5.6)
sum((p3values - 5.6))
p3values - 5.6
p3diff <- p3values - 5.6
sum(p3diff)
p3diff <- round(p3values - 5.6, digits=4)
sum(p3diff)
unclass(p3diff)
sum(p3diff)
p3diff^2
sum(p3diff^2)
sum(p3diff^2)/length(p3values)
dir()
dir()
setwd(..)
setwd("..")
dir()
setwd("ProgrammingAssignment2")
dir()
source('C:/Users/Mark/Dropbox (Personal)/Code/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Mark/Dropbox (Personal)/Code/ProgrammingAssignment2/cachematrix.R')
?matrix
library(stats)
ability.cov
testmatrix <- ability.cov
testmatrix <- as.matrix(ability.cov)
View(testmatrix)
cars
testmatrix <- cars
View(testmatrix)
View(testmatrix)
solve(testmatrix)
?matrix
?matrix(c(1,2,3,4,5,6,7,8,9), nrow =3, ncol =3)
testmatrix <- ?matrix(c(1,2,3,4,5,6,7,8,9), nrow =3, ncol =3)
testmatrix
testmatrix <- matrix(c(1,2,3,4,5,6,7,8,9), nrow =3, ncol =3)
View(testmatrix)
solve(testmatrix)
?solve
solve(p1values)
testmatrix[3,3] <- 11
testmatrix
solve(testmatrix)
?names
testinverse <-solve(testmatrix)
testinverse
names(testinverse, c("i1", "i2", "i3"))
names(testinverse) <- c("i1", "i2", "i3")
testinverse
names(testinverse)
testinverse
testinverse <-solve(testmatrix)
testinverse
?rownames
rownames(testinverse) <- c("i1", "i2", "i3")
testinverse
testmatrix <- rbind(testmatrix, testinverse)
testmatrix
testmatrix[(length(testmatrix)/2+1):(length(testmatrix))]
?nrow
testmatrix[(nrow(testmatrix)/2+1):(length(testmatrix))]
testmatrix[(nrow(testmatrix)/2+1)]
testmatrix[(nrow(testmatrix)/2+1),]
testmatrix[(nrow(testmatrix)/2+1):(length(testmatrix)),]
testmatrix[(nrow(testmatrix)/2+1):(nrow(testmatrix)),]
testMatrix <- matrix(c(1,2,3,4,5,6,7,8,11), nrow =3, ncol =3)
testMatrix
testInv <-solve(testmatrix) #creates inverse
View(testMatrix)
View(testMatrix)
testInv <-solve(testMatrix) #creates inverse
testInv
rownames testMatrix
rownames(testMatrix)
?rownames
tempNames <- rownames(testMatrix)
